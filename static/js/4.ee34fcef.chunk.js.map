{"version":3,"sources":["components/Profile.module.css","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Post/Post.jsx","components/Profile/Post/PostContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","MyPosts","props","className","s","item","src","alt","post","likesCount","friend","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","Post","postsElements","posts","map","p","friendsOnline","values","addNewPost","newPostText","PostContainer","connect","state","profilePage","dispatch","sendNewPostCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.ee34fcef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item2\":\"Profile_item2__3tSAJ\",\"item\":\"Profile_item__3TxsH\"};","import React from 'react';\r\nimport s from \"../../Profile.module.css\";\r\n\r\n\r\n\r\nconst MyPosts =(props) =>{\r\n    return(\r\n        <div>\r\n            <div className={s.item}>\r\n                <img\r\n                    src='https://cdn.powered-by-nitrosell.com/public_html/12/2853/media/images/blog/photos/img-dogs-farting.jpg'\r\n                    alt=\"dog\"/> <div>{props.post}</div>\r\n                <div>{props.likesCount}</div></div>\r\n            <div>{props.friend}</div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"../MyPosts/MyPosts\";\r\nimport s from \"../../Profile.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field name=\"newPostText\" component={Textarea}  validate={[required, maxLength10]} placeholder={\"Enter your message\"}/>\r\n        </div>\r\n        <div><button>Post Your Message</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddPost\"}) (AddNewPostForm)\r\n\r\nconst Post = (props) => {\r\n    let postsElements = props.posts.map(p => <MyPosts post={p.post} likesCount={p.likesCount}/>);\r\n    let friendsOnline = props.friendsOnline.map(p => <MyPosts post={p.friend}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addNewPost(values.newPostText);\r\n\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <AddNewPostFormRedux onSubmit = {addNewPost}/>\r\n            <div>{postsElements}</div>\r\n            <div>{friendsOnline}</div>\r\n\r\n        </div>)\r\n}\r\n\r\n\r\n\r\nexport default Post","import React from \"react\";\r\nimport {sendNewPostCreator} from \"../../../redux/profile-reducer\";\r\nimport Post from \"./Post\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n            return {\r\n                posts: state.profilePage.posts,\r\n                friendsOnline: state.profilePage.friendsOnline,\r\n                newPostText: state.profilePage.newPostText\r\n            }\r\n        }\r\n        const mapDispatchToProps =(dispatch) => {\r\n            return {\r\n                addNewPost: (newPostText) => {\r\n                dispatch(sendNewPostCreator(newPostText));\r\n                }\r\n            }\r\n            }\r\n        const PostContainer = connect(mapStateToProps, mapDispatchToProps)(Post)\r\n\r\n        export default PostContainer;","import React, {useEffect, useState} from \"react\";\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    useState(true)\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {setStatus(props.status);},\r\n                [props.status]\r\n)\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return(\r\n        <div>{!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No Status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} value={status}  autoFocus={true} onBlur={deactivateEditMode}/></div>}\r\n        </div>)\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport Preloader from \"../../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\nif (!profile) {\r\n    return <Preloader/>\r\n}\r\nreturn (<div>\r\n      <div> <img src={profile.photos.large}/>\r\n      </div>\r\n    <div><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport PostContainer from \"./Post/PostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div><ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n    <PostContainer/>\r\n             </div>)\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {this.props.history.push(\"/login\")}\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n    render() {\r\n    return (\r\n    <Profile {...this.props} profile={this.props.profile} status ={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}