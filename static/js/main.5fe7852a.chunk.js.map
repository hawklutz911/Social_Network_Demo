{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Nav/Navbar.module.css","redux/dialogs-reducer.js","components/Users/Users.module.css","api/api.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Nav/News/News.jsx","components/Nav/Music/Music.jsx","components/Nav/Settings/Settings.jsx","components/Nav/Navbar.jsx","redux/users-reducer.js","components/common/Paginator/Paginator.js","assets/images/userPhoto.png","components/Users/User.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspence.js","App.js","redux/redux-store.js","index.js","utils/validators.js","components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","assets/images/preloader.gif","Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","SEND_MESSAGE","initialState","dialogsData","id","name","dialogsMessages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Header","className","s","header","src","alt","loginBlock","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","News","Music","Settings","Navbar","nav","item","activeClassName","activeLink","active","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","bind","usersReducer","count","filter","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","map","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","followed","disabled","some","Users","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","page","items","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","messages","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","Login","withRouter","app","promise","Promise","all","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","value","maxLengthCreator","maxLength","placeholder","validators","text","validate","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","backgroundColor","preloader","SEND_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","posts","likesCount","friendsOnline","friend","profile","sendNewPostCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.5fe7852a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__nIJKT\",\"item\":\"Navbar_item__Ozvqz\",\"activeLink\":\"Navbar_activeLink__1sGkH\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [{id: 1, name: 'Peter'},\r\n        {id: 2, name: 'Mary'},\r\n        {id: 3, name: 'Mark'},\r\n        {id: 4, name: 'Andrew'}],\r\n\r\n    dialogsMessages: [{id: 1, message: 'How are you?'},\r\n        {id: 2, message: 'Everything is OK'},\r\n        {id: 3, message: 'Perfect!'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n             return {...state,\r\n                 dialogsMessages: [...state.dialogsMessages, {id: 5, message: body}]\r\n             };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__1iRhj\",\"selectedPage\":\"Users_selectedPage__1QA5y\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\"API-KEY\": \"c3bda114-de16-45e9-a320-ea03d5d9d7d2\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n    return    profileAPI.getProfile(userId)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status:status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n            return instance.delete (`auth/login`)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className= {s.header}>\r\n        <img src='https://cdn.dribbble.com/users/13604/screenshots/7557893/image.png' alt=\"logo\" />\r\n        <div className={s.loginBlock}> { props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n            : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}  });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ?\r\n                    response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth, login: state.auth.login})\r\nexport default connect  (mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from '../Navbar.module.css';\r\n\r\nconst News =()=> {\r\n  return  (\r\n        <div>News</div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from '../Navbar.module.css';\r\n\r\nconst Music =()=> {\r\n    return (\r\n        <div>Music</div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from '../Navbar.module.css';\r\n\r\nconst Settings =()=> {\r\n  return  (\r\n        <div>Settings</div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport News from \"./News/News\";\r\nimport Music from \"./Music/Music\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (<nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Profile\" activeClassName={s.activeLink}>Profile</NavLink></div>\r\n        <div className={s.item}> <NavLink to='/Dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Users\" activeClassName={s.activeLink}>Users</NavLink></div>\r\n    <div className={`${s.item} ${s.active}`}> <NavLink to='/News'activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className={s.item}> <NavLink to='/Music' activeClassName={s.activeLink}>\r\n        Music</NavLink>\r\n    </div>\r\n    <div className={s.item}> <NavLink to='/Settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n    </div>\r\n</nav>)\r\n\r\n}\r\nexport default Navbar;","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectsInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n               users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\ndispatch(toggleFollowingProgress(true, userId));\r\nlet response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = async (userId) => {\r\n    return (dispatch) => {\r\n       followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n\r\n}\r\nexport const unfollow = async (userId) => {\r\n    return (dispatch) => {\r\n     followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber-1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber-1) }}>PREVIOUS</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n            return <span className={ cn({\r\n                [styles.selectedPage]: currentPage === p\r\n            }, styles.pageNumber) }\r\n                         key={p}\r\n                         onClick={(e) => {\r\n                             onPageChanged(p);\r\n                         }}>{p}</span>\r\n        })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/userPhoto.0208d350.png\";","import {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/userPhoto.png\";\r\nimport styles from \"./Users.module.css\";\r\nimport React from \"react\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some\r\n                                (id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n    </div>)\r\n}\r\n\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage = {currentPage} onPageChanged ={onPageChanged}\r\n                   totalItemsCount = {totalUsersCount} pageSize = {pageSize}/>\r\n\r\n<div>\r\n    {\r\n        users.map(u => <User user={u}\r\n                             followingInProgress={props.followingInProgress}\r\n                             key={u.id}\r\n                             follow={props.follow}\r\n                             unfollow={props.unfollow}\r\n                             />)\r\n    }\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress,\r\n    requestUsers} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n      this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n            }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose (connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage,  toggleFollowingProgress, getUsers: requestUsers}),\r\n    withAuthRedirect)\r\n(UsersContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {createField, required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormControls/FormControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"}) }\r\n            {createField(null, \"rememberMe\", [], Input, {type:\"checkbox\"}, \"remember me\")}\r\n          \r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized:false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise= dispatch(getAuthUserData());\r\n    Promise.all([promise]).then (() =>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;\r\n","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {return <React.Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props}/>\r\n    </React.Suspense>\r\n    }}\r\n","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navbar from \"./components/Nav/Navbar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Nav/Music/Music\";\nimport Settings from \"./components/Nav/Settings/Settings\";\nimport News from \"./components/Nav/News/News\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport Preloader from \"./Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspence\";\n\nconst DialogsContainer = React.lazy(()=>\nimport ('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(()=>\nimport('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized)\n            return <Preloader/>\n        return (\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/Dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)\n                        }/>\n                        <Route path='/Users' render={() => <UsersContainer/>}/>\n                        <Route path='/News' component={News}/>\n                        <Route path='/Music' component={Music}/>\n                        <Route path='/Settings' component={Settings}/>\n                        <Route path='/Login' component={Login}/>\n\n                    </div>\n                </div>)\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized:state.app.initialized\n})\n\nexport default compose (withRouter, connect  (mapStateToProps, {initializeApp})) (App);\n","import {combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport {createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(<BrowserRouter>\n            <Provider store={store}>\n            <App/>\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root'))\n\n\n\n\n","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const required = value => {\r\n    if(value) return undefined;\r\n    return `Field is required`\r\n}\r\n\r\n\r\nexport const maxLengthCreator =(maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} characters`;\r\n    return undefined;\r\n}\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n        {...props}/>{text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3bhsl\",\"error\":\"FormControls_error__9zCT8\",\"formSummaryError\":\"FormControls_formSummaryError__QIWbL\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","export default __webpack_public_path__ + \"static/media/preloader.372b42cf.gif\";","import preloader from \"../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\nreturn <div style={{backgroundColor: \"white\"}}> <img src={preloader}/></div>\r\n    }\r\n\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1rlnI\",\"pageNumber\":\"Paginator_pageNumber__2b9U4\",\"selectedPage\":\"Paginator_selectedPage__2FQj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3m9i-\",\"loginBlock\":\"Header_loginBlock__1Ektg\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst SEND_NEW_POST_TEXT = 'SEND_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [{id: 1, post: 'Howdy!', likesCount: '11'},\r\n            {id: 2, post: 'It\\'s my first post!', likesCount: '15'}],\r\n    friendsOnline: [{friend: 'Andrew'},\r\n        {friend: 'Mark'},\r\n        {friend: 'Johann'},\r\n        {friend: 'Ann'}\r\n        ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_NEW_POST_TEXT: {\r\n            let newPost = {id: 3, post: action.newPostText, likesCount: '0'};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {...state,\r\n                status: action.status}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\ndefault: return state;\r\n}\r\n}\r\nexport const sendNewPostCreator = (newPostText) => ({type: SEND_NEW_POST_TEXT, newPostText});\r\nexport const setUserProfile = (profile) => ({type:SET_USER_PROFILE, profile});\r\nexport const setStatus =(status) => ({type: SET_STATUS, status});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus= (userId) => async (dispatch)=> {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(getStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n}\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}